analysis:
        start_time: '2023-06-27'
        end_time: '2023-06-28'
        debug: False
        output_dir: /scratch1/BMC/rcm2/mbruckner/iagos
obs:
        iagos:
                filename: '/scratch1/BMC/rcm2/mbruckner/iagos/IAGOS_timeseries_2023062701364109_L2_3.1.0.nc4'
                obs_type: aircraft
                time_var: UTC_time
                variables:
                        'O3_P1':
                                unit_scale: 1
                                unit_scale_method: '*'
                        'CO_P1':
                                unit_scale: 1
                                unit_scale_method: '*'
                        'lon':
                                rename: longitude
                        'lat':
                                rename: latitude
                        'baro_alt_AC':
                                rename: altitude
                        'air_press_AC':
                                rename: pressure_obs
                                unit_scale: 1
                                unit_scale_method: '*'
                        'air_temp_AC':
                                rename: temp_obs
                                unit_scale: 1
                                unit_scale_method: '*'
                        'UTC_time':
                                rename: time

model:
        ufsaqm:
                files: '/scratch1/BMC/rcm2/rhs/monet_example/AEROMMA/UFS-AQM/cmaq54_OriRave1/aqm.202306*/12/aqm.t12z.dyn.*.nc'
                mod_type: 'ufs'
                variables:
                        'pres_pa_mid':
                                rename: pressure_model
                                unit_scale: 1
                                unit_scale_method: '*'
                        'temperature_k':
                                rename: temp_model
                                unit_scale: 1
                                unit_scale_method: '*'

                mapping:
                        iagos:
                                co: CO_P1

                plot_kwargs:
                        color: 'purple'
                        marker: '^'
                        linestyle: 'dotted'
plots:
  plot_grp2:
    type: 'vertprofile'  # plot type
    fig_kwargs:  # Opt to define figure options
      figsize: [10, 14]  # figure size
    default_plot_kwargs:  # Opt to define defaults for all plots. Model kwargs overwrite these.
      linewidth: 4.0
      markersize: 10.
    text_kwargs:  # Opt
      fontsize: 18.
    domain_type: ['all']  # List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: [' ']  # List of domain names. If domain_type = all, domain_name is used in plot title.
    data: ['iagos_ufsaqm']  # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True  # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: False  # If set to True, add vmin_plot and vmax_plot for each variable in obs.
      interquartile_style: 'shading' # or 'box'
    #TO DO: altitude_variable: 'Static_Pressure_YANG' or 'pressure_obs' (=P_BUI(hPa)*100) (pressure in Pa)  # ISSUE created: Add capability of the altitude variable to take pressure as an option to MSL height
    altitude_variable: altitude #'MSL_GPS_Altitude_YANG' #'ALTITUDE' in m or desired unit
    #vertprofile_bins: [0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]   # Specify the Pressure altitude bin size in hPa    
    vertprofile_bins: [0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000] # meters
    #vertprofile_bins: [0, 1000, 2000, 3000, 4000, 5000] # meters # Needs to be specified as per min and max altitude (vmin, vmax)
    vmin: #0  #Optional
    vmax: #5000 # Optional #'vertprofile bins' need to be edited as per min and max altitude (i.e., vmin and vmax, if specified)

  plot_grp3:
    type: 'violin'
    fig_kwargs:
      figsize: [10, 8]
    text_kwargs:
      fontsize: 20.
    domain_type: ['all']
    domain_name: [' ']
    data: ['iagos_ufsaqm']
    data_proc:
      rem_obs_nan: True 
      set_axis: False

    
  plot_grp4:
    type: 'scatter_density'
    fig_kwargs:
      figsize: [10, 10]
    default_plot_kwargs:
      linewidth: 4.0
      markersize: 10.
    text_kwargs:
      fontsize: 18.
    domain_type: ['all']
    domain_name: [' ']
    data: ['iagos_ufsaqm']
    data_proc:
      rem_obs_nan: True
      set_axis: False #True
      vmin_x: #0
      vmax_x: #100
      vmin_y: #0
      vmax_y: #100
    color_map: #'RdBu_r' # Default Colormap for the density plot can be used. Options include:
                        # 'viridis', 'plasma', 'inferno', 'magma', 'cividis',
                        # 'jet', 'hot', 'cool', 'spring', 'summer', 'autumn', 'winter',
                        # 'RdBu_r', 'seismic', 'coolwarm',
                        # 'Blues', 'BuGn', 'YlOrRd', 'Greys'
        #To use a custom colormap: Use the following options otherwise use the above default color_map(s) AND COMMENT THESE
        colors: ['royalblue', 'cyan', 'yellow', 'orange']
        over: 'red'
        under: 'blue'
    xlabel: 'Model'
    ylabel: 'Observation'
    title: 'Scatter Density Plot'
    fill: False #True #False              # Set to True if you want to fill the area under the density curve (for kde plot), False for sactterplot
    shade_lowest: True #False      # Set to True if you want to shade the lowest contour (if fill=TRUE for KDE plots)
    # Add other seaborn.kdeplot keyword arguments here as needed
    vcenter: #0  # Central value for TwoSlopeNorm
    extensions: ['min', 'max']  # Extensions for the colorbar  

  plot_grp5:
    type: 'curtain'
    fig_kwargs:
      figsize: [20,14] #[12, 8]
    default_plot_kwargs:
      #linewidth: 4.0
      markersize: 40.
    text_kwargs:
      fontsize: 25 #18
      fontweight: 'bold'
      labelsize: 16
    domain_type: ['all']
    domain_name: [' ']
    data: ['iagos_ufsaqm']
    data_proc:
      rem_obs_nan: True
      set_axis: True
      altitude_variable: 'altitude'
    ##To use a custom Matplotlib colormap, set “color_map_custom”=True and specify “colors” and "color_levels" like the example below. To use a standard Matplotlib colormap, set “color_map_custom” = False and specify a “color_map”:
    color_map_custom: True #False 
    colors: ["#ff8cff", "#dd6ff2", "#bb52e5", "#9935d8", "#7718cb",
        "#0000bb", "#002ccc", "#0058dd", "#0084ee", "#00afff",
        "#00ebff", "#27ffd7", "#63ff9b", "#a3ff5b", "#d3ff2b",
        "#ffff00", "#ffcf00", "#ff9f00", "#ff6f00", "#ff3f00",
        "#ff0000", "#d8000f", "#b2001f", "#8c002f", "#66003f",
        "#343434", "#606060", "#8c8c8c", "#b8b8b8", "#e4e4e4"] # Example gradient
    color_levels: 30   # Define the number of distinct colors in the color bar (see te numbers of colors in 'colors' key above is matching)
    #color_map: 'Spectral_r' #'jet'  # This can be set instead of color_map_custom, color_levels and color_levels to set a colormap defined in matplotlob.  
    vmin: 50 #in hPa #5000 #120000 #Pressure in Pa  #0  #Optional (y-axis limits)
    vmax: 1200 # in hPa #120000 #5000 # Optional #need to be edited as per min and max altitude (i.e., vmin and vmax)
    num_levels: 100   # Number of vertical levels for interpolation
    interval: 100 #hPa #10000 #Pa   # Y-axis tick interval in Pa (e.g., ticks every 10,000 Pa)
    pressure_units: 'hPa' #'Pa' (units for y-axis)
    
  plot_grp6:
    type: 'taylor' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [8,8] # figure size if multiple plots
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      linewidth: 2.0
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: [' '] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['iagos_ufsaqm'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: True #If select True, add ty_scale for each variable in obs.
      
  plot_grp7:
    type: 'boxplot' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [8, 6] # figure size 
    text_kwargs: #Opt
      fontsize: 20.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
    domain_name: [' '] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['iagos_ufsaqm'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.
      
stats:
  #Stats require positive numbers, so if you want to calculate temperature use Kelvin!
  #Wind direction has special calculations for AirNow if obs name is 'WD'
  stat_list: ['MB', 'MdnB','R2', 'RMSE'] #List stats to calculate. Dictionary of definitions included in plots/proc_stats.py Only stats listed below are currently working.
  #Full calc list ['STDO', 'STDP', 'MdnNB','MdnNE','NMdnGE', 'NO','NOP','NP','MO','MP', 'MdnO', 'MdnP', 'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB', 'ME','MdnE','NME', 'NMdnE', 'FE', 'R2', 'RMSE','d1','E1', 'IOA', 'AC']
  round_output: 2 #Opt, defaults to rounding to 3rd decimal place.
  output_table: False #Always outputs a .txt file. Optional to also output as a table.
  output_table_kwargs: #Opt 
    figsize: [7, 3] # figure size 
    fontsize: 12.
    xscale: 1.4
    yscale: 1.4
    edges: 'horizontal'
  domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
  domain_name: [' '] #List of domain names. If domain_type = all domain_name is used in plot title.
  data: ['iagos_ufsaqm'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
